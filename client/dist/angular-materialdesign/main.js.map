{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.css","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.html","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.ts","webpack:///./src/app/components/driver/form.driver/form.driver.component.html","webpack:///./src/app/components/driver/form.driver/form.driver.component.scss","webpack:///./src/app/components/driver/form.driver/form.driver.component.ts","webpack:///./src/app/components/driver/search.driver/search.driver.component.html","webpack:///./src/app/components/driver/search.driver/search.driver.component.scss","webpack:///./src/app/components/driver/search.driver/search.driver.component.ts","webpack:///./src/app/components/imageviewer/imageviewer.component.html","webpack:///./src/app/components/imageviewer/imageviewer.component.scss","webpack:///./src/app/components/imageviewer/imageviewer.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/map/search.map/search.map.component.html","webpack:///./src/app/components/map/search.map/search.map.component.scss","webpack:///./src/app/components/map/search.map/search.map.component.ts","webpack:///./src/app/components/vehicle/form.vehicle/form.vehicle.component.html","webpack:///./src/app/components/vehicle/form.vehicle/form.vehicle.component.scss","webpack:///./src/app/components/vehicle/form.vehicle/form.vehicle.component.ts","webpack:///./src/app/components/vehicle/search.vehicle/search.vehicle.component.html","webpack:///./src/app/components/vehicle/search.vehicle/search.vehicle.component.scss","webpack:///./src/app/components/vehicle/search.vehicle/search.vehicle.component.ts","webpack:///./src/app/services/driver/driver.model.ts","webpack:///./src/app/services/driver/driver.service.ts","webpack:///./src/app/services/vehicle/vehicle.model.ts","webpack:///./src/app/services/vehicle/vehicle.service.ts","webpack:///./src/app/shared/env-config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport {SearchDriverComponent} from './components/driver/search.driver/search.driver.component';\nimport {FormDriverComponent} from './components/driver/form.driver/form.driver.component';\nimport {SearchVehicleComponent} from './components/vehicle/search.vehicle/search.vehicle.component';\nimport {FormVehicleComponent} from './components/vehicle/form.vehicle/form.vehicle.component';\nimport {SearchMapComponent} from './components/map/search.map/search.map.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    // component: LoginComponent\n     component: SearchMapComponent\n  },\n  {\n    path: 'map',\n    // component: LoginComponent\n     component: SearchMapComponent\n  },\n  {\n    path: 'driver',\n    component: SearchDriverComponent\n  },\n  {\n    path: 'driver/form',\n    component: FormDriverComponent\n  },\n  {\n    path: 'driver/form/:id',\n    component: FormDriverComponent\n  },\n  {\n    path: 'vehicle',\n    component: SearchVehicleComponent\n  },\n  {\n    path: 'vehicle/form',\n    component: FormVehicleComponent\n  },\n  {\n    path: 'vehicle/form/:id',\n    component: FormVehicleComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes\n    )\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: []\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\n   <mat-nav-list>\\n    <a mat-list-item\\n      routerLink=\\\"/map\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">map</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Map</span>\\n    </a>\\n    <a mat-list-item\\n        routerLink=\\\"/driver\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">perm_contact_calendar</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Driver</span>\\n    </a>\\n    <a mat-list-item\\n      routerLink=\\\"/vehicle\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">directions_bus</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Vehicle</span>\\n    </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n     <div fxHide.gt-xs>\\n       <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n    </div>\\n     <div>\\n       <a routerLink=\\\"/\\\">\\n          Where is my VAN ?\\n       </a>\\n     </div>\\n     <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n            <li>\\n                <a\\n                  routerLink=\\\"/map\\\">\\n                    <mat-icon class=\\\"icon\\\">map</mat-icon>\\n                    &nbsp;<span class=\\\"label\\\">Map</span>\\n                </a>\\n            </li>\\n            <li>\\n              <a\\n                routerLink=\\\"/driver\\\">\\n                  <mat-icon class=\\\"icon\\\">perm_contact_calendar</mat-icon>\\n                  &nbsp;<span class=\\\"label\\\">Driver</span>\\n              </a>\\n            </li>\\n            <li>\\n                <a\\n                  routerLink=\\\"/vehicle\\\">\\n                    <mat-icon class=\\\"icon\\\">directions_bus</mat-icon>\\n                    &nbsp;<span class=\\\"label\\\">Vehicle</span>\\n                </a>\\n            </li>\\n        </ul>\\n     </div>\\n    </mat-toolbar>\\n    <main>\\n      <router-outlet #o=\\\"outlet\\\"></router-outlet>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n  height: 100%; }\\n\\nmat-sidenav {\\n  width: 250px; }\\n\\na {\\n  text-decoration: none;\\n  color: black; }\\n\\na:hover,\\na:active {\\n  color: lightgray; }\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer; }\\n\\n.icon {\\n  display: inline-block;\\n  height: 30px;\\n  margin: 0 auto;\\n  padding-right: 5px;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 15%; }\\n\\n.label {\\n  display: inline-block;\\n  line-height: 30px;\\n  margin: 0;\\n  width: 85%; }\\n\"","\nimport { Subscription } from 'rxjs'\n\nimport { Component } from '@angular/core'\nimport {trigger, animate, style, group, animateChild, query, stagger, transition} from '@angular/animations'\n\nexport const routerTransition =\ntrigger('routerTransition', [\n      transition('* <=> *', [\n        // Initial state of new route\n        query(':enter',\n          style({\n            position: 'fixed',\n            width:'100%',\n            transform: 'translateX(100%)',\n            opacity: 1\n          }),\n          {optional:true}),\n        // move page off screen right on leave\n        query(':leave',\n          animate('300ms ease-out',\n            style({\n              position: 'fixed',\n              width:'100%',\n              transform: 'translateX(-100%)',\n              opacity: 1\n            })\n          ),\n        {optional:true}),\n\n        // move page in screen from left to right\n        query(':enter',\n          animate('300ms ease-in',\n            style({\n              opacity: 1,\n              transform: 'translateX(0%)'\n            })\n          ),\n        {optional:true}),\n        // --\n    ])\n])\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ routerTransition ],\n})\nexport class AppComponent {\n  title = 'Titulo'\n  loading = false\n\n  private loaderSubscription: Subscription\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n  getState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n  ngOnDestroy() {\n    this.loaderSubscription.unsubscribe()\n  }\n\n}\n","// Core Modules\nimport { NgModule, ClassProvider } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// teste zoom image on IE\nimport { ImageViewerComponent } from './components/imageviewer/imageviewer.component';\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\n\nimport { CustomToolBarComponent } from './components/custom-toolbar/custom.toolbar.component';\n\n// Material UI\nimport {\n  MatToolbarModule,\n  MatCardModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatListModule,\n  MatDividerModule,\n  MatChipsModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatAutocompleteModule,\n  MatSelectModule,\n  MatMenuModule,\n  MatStepperModule,\n  MatSidenavModule,\n  MatBadgeModule,\n  MatDialogModule,\n  MatTreeModule\n} from '@angular/material';\n\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n// Rotas\nimport { AppRoutingModule } from './app-routing.module';\n\n// Components\nimport { AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {SearchDriverComponent} from './components/driver/search.driver/search.driver.component';\nimport { FormDriverComponent } from './components/driver/form.driver/form.driver.component';\n\nimport {SearchVehicleComponent} from './components/vehicle/search.vehicle/search.vehicle.component';\nimport { FormVehicleComponent } from './components/vehicle/form.vehicle/form.vehicle.component';\n\nimport {SearchMapComponent} from './components/map/search.map/search.map.component';\n\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SearchDriverComponent,\n    FormDriverComponent,\n    SearchVehicleComponent,\n    FormVehicleComponent,\n    SearchMapComponent,\n    ImageViewerComponent,\n    CustomToolBarComponent\n  ],\n  imports: [\n    // ##CORE\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CdkTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // ##MATERIAL\n    MatToolbarModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    // ##MATERIAL\n\n    // ##IMAGE VIEWER\n    ImageViewerModule,\n\n    // ## MAP COMPONENT\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDxITfICi9qrSzx1d4TQH_fK_nq0oZraRA'\n    }),\n\n    AppRoutingModule // ROTAS\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n    height: 100%;\\n  }\\n  \\n  mat-sidenav {\\n    width: 250px;\\n  }\\n  \\n  a {\\n    text-decoration: none;\\n    color: white;\\n  }\\n  \\n  a:hover,\\n  a:active {\\n    color: lightgray;\\n  }\\n  \\n  .navigation-items {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0;\\n    cursor: pointer;\\n  }\\n  \\n  .icon {\\n    display: inline-block;\\n    height: 30px;\\n    margin: 0 auto;\\n    padding-right: 5px;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 15%;\\n  }\\n  \\n  .label {\\n    display: inline-block;\\n    line-height: 30px;\\n    margin: 0;\\n    width: 85%;\\n  }\"","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\n   <mat-nav-list>\\n    <a mat-list-item>\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n      <span class=\\\"label\\\">Processo</span>\\n    </a>\\n    <a  mat-list-item type=\\\"button\\\" (click)=\\\"routeFormUser()\\\">\\n      <mat-icon class=\\\"icon\\\">person</mat-icon>&nbsp;\\n      <span class=\\\"label\\\">Usuário</span>\\n    </a>  \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n     <div fxHide.gt-xs>\\n       <button mat-icon-button>\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n    </div>\\n     <div>\\n       <a>\\n          Sistema de Processo\\n       </a>\\n     </div>\\n     <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n            <li>\\n              <a (click)=\\\"routeFormUser()\\\">\\n                  <mat-icon class=\\\"icon\\\">person</mat-icon>&nbsp;\\n                  <span class=\\\"label\\\">Usuário</span>\\n              </a>\\n            </li>\\n            <li>\\n                <a>\\n                    <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n                    <span class=\\\"label\\\">Processo</span>\\n                </a>\\n              </li>\\n        </ul>\\n     </div>\\n    </mat-toolbar>\\n    <main>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-custom-tool-bar',\n  templateUrl: './custom.toolbar.component.html',\n  styleUrls: ['./custom.toolbar.component.css']\n})\nexport class CustomToolBarComponent {\n\n  constructor(\n    private router: Router\n  ){}\n\n  routeFormUser() {\n    this.router.navigate([`/user`]);\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-content >\\n        <mat-card-title >\\n          <button mat-icon-button color=\\\"accent\\\" (click)=\\\"voltar()\\\"><mat-icon>keyboard_backspace</mat-icon> </button>\\n          &nbsp;Driver\\n        </mat-card-title>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Name\\\" id=\\\"name\\\" [(ngModel)]=\\\"driver.name\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"driver.email\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"CellPhone Number\\\" id=\\\"cellPhoneNumber\\\" [(ngModel)]=\\\"driver.cellPhoneNumber\\\" required>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"driver.status\\\">\\n                  <mat-option value=\\\"ATIVO\\\" >ATIVO</mat-option>\\n                  <mat-option value=\\\"INATIVO\\\">INATIVO</mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n        <span class=\\\"send\\\">\\n          <button mat-fab (click)=\\\"save()\\\"> \\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </span>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { DriverService } from '../../../services/driver/driver.service';\nimport { Driver } from '../../../services/driver/driver.model'\n\n@Component({\n  selector: 'app-form-driver',\n  templateUrl: './form.driver.component.html',\n  styleUrls: ['./form.driver.component.scss']\n})\nexport class FormDriverComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private driverService: DriverService\n  ) { }\n\n  driverId: number;\n  driver: Driver = new Driver();\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      if(params.get('id')){\n        this.driverId = Number(params.get('id'))\n        this.driverService.getDriverById(this.driverId).subscribe(\n          d =>{\n              this.driver = d;\n          }\n        )\n      }else{\n        this.driver = new Driver();\n      }\n    });\n  }\n\n  save(){\n    if(this.driver.id){\n      this.upDateDriver();\n    }else{\n      this.createDriver();\n    }\n  }\n\n  createDriver(){\n    this.driverService.createDriver(this.driver).subscribe(\n      u =>{\n        this.router.navigate(['/driver'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  upDateDriver(){\n    this.driverService.updateDriver(this.driverId, this.driver).subscribe(\n      d =>{\n        this.router.navigate(['/driver'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-title>\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"routeFormNewDriver()\\\">\\n            <mat-icon>perm_contact_calendar</mat-icon>\\n            Add New\\n        </button>\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n      <div *ngIf=\\\"isError\\\">\\n        <mat-chip-list >\\n          <mat-chip style=\\\"margin-left: 30%\\\" color=\\\"warn\\\" selected=\\\"true\\\"><mat-chip-avatar> <mat-icon>error</mat-icon></mat-chip-avatar> {{ error }}</mat-chip>\\n        </mat-chip-list>\\n      </div>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <mat-list-item *ngFor=\\\"let d of drivers\\\">\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line (click)=\\\"routeFormDriver(d.id)\\\" ><mat-icon>account_circle</mat-icon> {{d.name}} | {{d.email}}</h4>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n      </mat-list-item>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \".demo-list {\\n  display: flex;\\n  flex-flow: row wrap; }\\n  .demo-list .mat-list, .demo-list .mat-nav-list, .demo-list .mat-selection-list {\\n    border: 1px solid rgba(0, 0, 0, 0.12);\\n    width: 350px;\\n    margin: 20px 20px 0 0; }\\n  .demo-list h2 {\\n    margin-top: 20px; }\\n  .demo-list .mat-icon {\\n    color: rgba(0, 0, 0, 0.12); }\\n  .demo-list .mat-list-icon {\\n    color: white;\\n    background: rgba(0, 0, 0, 0.3); }\\n  .demo-secondary-text {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { DriverService } from '../../../services/driver/driver.service';\nimport { Driver } from '../../../services/driver/driver.model'\n\n@Component({\n  selector: 'app-search-driver-component',\n  templateUrl: './search.driver.component.html',\n  styleUrls: ['./search.driver.component.scss']\n})\nexport class SearchDriverComponent implements OnInit {\n\n  drivers: Driver[];\n\n  // exibicao de mensagem de erro na tela\n  isError: Boolean = false;\n  error: string;\n\n  // exibicao de loader na tela\n  exibeProgress: Boolean = false;\n  value: Number = 0;\n\n  constructor(\n    private driverService: DriverService,\n    private router: Router\n  ) { }\n\n  routeFormDriver(id) {\n    this.router.navigate([`/driver/form/${id}`]);\n  }\n\n  routeFormNewDriver() {\n    this.router.navigate([`/driver/form`]);\n  }\n\n  back() {\n    window.history.back();\n  }\n\n  ngOnInit() {\n    this.driverService.getDriversMock() //getAllDrivers()\n      .subscribe(res => {\n        console.log('>>>> get Drivers res=', res);\n        this.drivers = res;\n        this.exibeProgress = false;\n        // this.router.navigate(['/Drivers'])\n    },\n    error => {\n      console.log('error service get Drivers ==>', error);\n      this.exibeProgress = false;\n      this.isError = true;\n      this.error = `Have no Drivers`;\n    });\n\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"imagecontainer\\\">\\n    <div #imagewrapper class=\\\"imagewrapper\\\">\\n      <ngx-imageviewer src=\\\"{{ urlSrc }}\\\" [width]=\\\"canvasDim.width\\\" [height]=\\\"canvasDim.height\\\"></ngx-imageviewer>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\nh2 {\\n  margin-left: 20px;\\n  white-space: nowrap; }\\n\\n.imagewrapper {\\n  flex: 1;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n  max-width: calc(100vw -  240px);\\n  min-width: calc(100vw - 240px);\\n  width: calc(100vw - 240px);\\n  max-height: calc(100vh - 152px);\\n  min-height: calc(100vh - 152px);\\n  height: calc(100vh - 152px); }\\n\\n@media only screen and (max-width: 600px) {\\n    .imagewrapper {\\n      max-width: calc(100vw - 40px);\\n      min-width: calc(100vw - 40px);\\n      width: calc(100vw - 40px); } }\\n\"","import { Component, AfterViewInit, ViewChild, ElementRef, HostListener, OnInit, Input } from '@angular/core';\nimport { IMAGEVIEWER_CONFIG, ImageViewerConfig } from '@hallysonh/ngx-imageviewer';\n\nconst IMAGEVIEWER_CUSTOM_CONFIG: ImageViewerConfig = {\n  width: 200, // component default width\n  height: 200, // component default height\n  bgStyle: '#ffffff', // component background style\n  buttonStyle: {\n  bgStyle: '#80CBC4', //  buttons' background style\n  iconStyle: '#ffffff', // buttons' icon colors\n  borderStyle: '#ffffff', // buttons' border style\n  borderWidth: 2 // buttons' border width (0 == disabled)\n}\n}\n\n@Component({\n  selector: 'app-imageviewer',\n  templateUrl: './imageviewer.component.html',\n  styleUrls: ['./imageviewer.component.scss'],\n  providers: [\n    {\n      provide: IMAGEVIEWER_CONFIG,\n      useValue: IMAGEVIEWER_CUSTOM_CONFIG\n    }\n  ]\n})\nexport class ImageViewerComponent implements AfterViewInit {\n  @ViewChild('imagewrapper') wrapper: ElementRef;\n\n  private _canvasDim = { width: 10, height: 10 };\n\n  @Input()\n  urlSrc: string\n\n  get canvasDim() {\n    return this._canvasDim;\n  }\n\n  ngAfterViewInit() {\n    this.updateCanvasDim();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.updateCanvasDim();\n  }\n\n  private updateCanvasDim() {\n    const el = this.wrapper && this.wrapper.nativeElement ? this.wrapper.nativeElement : null;\n    if (el && (el.offsetWidth !== this._canvasDim.width || el.offsetHeight !== this._canvasDim.height)) {\n      const newDim = { width: el.offsetWidth - 2, height: el.offsetHeight - 2 };\n      setTimeout(() => this._canvasDim = newDim, 0);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"  <div>\\n  <mat-card>\\n    <mat-card-title><mat-card-title><mat-icon>lock</mat-icon> Login  </mat-card-title></mat-card-title>\\n\\n    <mat-card-content>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"User\\\" id=\\\"user\\\" [(ngModel)]=\\\"user\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"loginError\\\">\\n        <mat-chip-list>\\n          <mat-chip selected=\\\"true\\\" color=\\\"warn\\\">\\n            <mat-icon>warning</mat-icon>\\n            {{ loginError }}\\n          </mat-chip>\\n        </mat-chip-list>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n        <span class=\\\"send\\\">\\n          <button mat-fab type=\\\"submit\\\" id=\\\"login\\\" >\\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </span>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  user: String;\n  password: String;\n  loginError: String;\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  login() {\n    console.log('efetuando login');\n    this.router.navigate(['/user']);\n  }\n\n  reduceParaAgrupar() {\n    const guias = [\n            { peg_id: '1', guia_id: 'guia1', instance: '2342342' },\n            { peg_id: '2', guia_id: 'guia22', instance: '254524423' },\n            { peg_id: '1', guia_id: 'guia11', instance: '6967853' },\n            { peg_id: '2', guia_id: 'guia2', instance: '4678643' },\n            { peg_id: '1', guia_id: 'guia111', instance: '9824612' }\n          ];\n\n    const novoArray = guias\n                  .reduce((acumulador, atual) => {\n                      acumulador[atual.peg_id] = acumulador[atual.peg_id] || [];\n                      acumulador[atual.peg_id].push(atual);\n                      return acumulador;\n                    },\n                    Object.create(null)\n                  );\n\n    console.log(novoArray);\n  }\n\n  reduceParaProcurar() {\n    const tasks = [\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' }\n    ];\n\n    const novoArray = tasks\n          .filter(d => d.processInstance.id)\n          .reduce( (reduce, task) => {\n                    const current = reduce.find(rd => rd.taskDefinitionKey === task.taskDefinitionKey);\n\n                    if (current) {\n                      current.processInstances.push({ taskId: task.id, ...task.processInstance });\n                    } else {\n                      reduce.push({\n                        name: task.name,\n                        taskDefinitionKey: task.taskDefinitionKey,\n                        processInstances: [{ taskId: task.id, ...task.processInstance }]\n                      });\n                    }\n\n                    return reduce;\n              }\n              , []\n            );\n    console.log(novoArray);\n  }\n\n}\n","module.exports = \"<div>\\n<!-- this creates a google map on the page with the given lat/lng from -->\\n<!-- the component as the initial center of the map: -->\\n<agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n  <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n</agm-map>\\n</div>\"","module.exports = \"agm-map {\\n  height: 680px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search-map-component',\n  templateUrl: './search.map.component.html',\n  styleUrls: ['./search.map.component.scss']\n})\nexport class SearchMapComponent implements OnInit {\n\n  title: string = 'My first AGM project';\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-content >\\n        <mat-card-title >\\n          <button mat-icon-button color=\\\"accent\\\" (click)=\\\"voltar()\\\"><mat-icon>keyboard_backspace</mat-icon> </button>\\n          &nbsp;Vehicle\\n        </mat-card-title>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n        <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Brand\\\" id=\\\"brand\\\" [(ngModel)]=\\\"vehicle.brand\\\" required>\\n            </mat-form-field>\\n        </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Name\\\" id=\\\"name\\\" [(ngModel)]=\\\"vehicle.name\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n            <textarea matInput placeholder=\\\"Model\\\" id=\\\"model\\\" [(ngModel)]=\\\"vehicle.model\\\" required></textarea>\\n        </mat-form-field>\\n      </div>\\n      <!-- <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"!vehicle.idUserFinishedBy\\\">\\n          <button mat-button color=\\\"accent\\\" (click)=\\\"save()\\\"> \\n              <mat-icon>save</mat-icon> Save\\n          </button>\\n      </div> -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n        <span class=\\\"send\\\">\\n          <button mat-fab (click)=\\\"save()\\\"> \\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </span>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { VehicleService } from '../../../services/vehicle/vehicle.service';\nimport { Vehicle } from '../../../services/vehicle/vehicle.model';\n\nimport { DriverService } from '../../../services/driver/driver.service';\nimport { Driver } from '../../../services/driver/driver.model';\n\n@Component({\n  selector: 'app-form-vehicle',\n  templateUrl: './form.vehicle.component.html',\n  styleUrls: ['./form.vehicle.component.scss']\n})\nexport class FormVehicleComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private vehicleService: VehicleService,\n    private driverService: DriverService\n  ) { }\n\n  vehicleId: number;\n  vehicle: Vehicle = new Vehicle();\n\n  drivers: Driver[];\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      if(params.get('id')){\n        this.vehicleId = Number(params.get('id'))\n        this.vehicleService.getVehicleById(this.vehicleId).subscribe(\n          v =>{\n            console.log('getvehicleById==>', v)\n            this.vehicle = v;\n          }\n        )\n      }else{\n        this.vehicle = new Vehicle();\n      }\n    });\n  }\n\n  save(){\n    if(this.vehicle.id){\n      this.upDatevehicle();\n    }else{\n      this.createvehicle();\n    }\n  }\n\n  createvehicle(){\n    this.vehicleService.createVehicle(this.vehicle).subscribe(\n      u =>{\n        this.router.navigate(['/vehicle'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  upDatevehicle(){\n    this.vehicleService.updateVehicle(this.vehicleId, this.vehicle).subscribe(\n      p =>{\n        this.router.navigate(['/vehicle'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-title>\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"routeFormNewVehicles()\\\">\\n            <mat-icon>directions_bus</mat-icon>\\n            Add New\\n        </button>\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n      <div *ngIf=\\\"isError\\\">\\n        <mat-chip-list >\\n          <mat-chip style=\\\"margin-left: 30%\\\" color=\\\"warn\\\" selected=\\\"true\\\"><mat-chip-avatar> <mat-icon>error</mat-icon></mat-chip-avatar> {{ error }}</mat-chip>\\n        </mat-chip-list>\\n      </div>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <mat-list-item *ngFor=\\\"let v of vehicles\\\">\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line (click)=\\\"routeFormVehicles(v.id)\\\" ><mat-icon>directions_bus</mat-icon> {{v.name}} </h4>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n      </mat-list-item>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \".demo-list {\\n  display: flex;\\n  flex-flow: row wrap; }\\n  .demo-list .mat-list, .demo-list .mat-nav-list, .demo-list .mat-selection-list {\\n    border: 1px solid rgba(0, 0, 0, 0.12);\\n    width: 350px;\\n    margin: 20px 20px 0 0; }\\n  .demo-list h2 {\\n    margin-top: 20px; }\\n  .demo-list .mat-icon {\\n    color: rgba(0, 0, 0, 0.12); }\\n  .demo-list .mat-list-icon {\\n    color: white;\\n    background: rgba(0, 0, 0, 0.3); }\\n  .demo-secondary-text {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { VehicleService } from '../../../services/vehicle/vehicle.service';\nimport { Vehicle } from '../../../services/vehicle/vehicle.model'\n\n@Component({\n  selector: 'app-search-vehicle-component',\n  templateUrl: './search.vehicle.component.html',\n  styleUrls: ['./search.vehicle.component.scss']\n})\nexport class SearchVehicleComponent implements OnInit {\n\n  vehicles: Vehicle[];\n\n  // exibicao de mensagem de erro na tela\n  isError: Boolean = false;\n  error: string;\n\n  // exibicao de loader na tela\n  exibeProgress: Boolean = false;\n  value: Number = 0;\n\n  constructor(\n    private vehicleService: VehicleService,\n    private router: Router\n  ) { }\n\n  routeFormVehicles(id) {\n    this.router.navigate([`/vehicle/form/${id}`]);\n  }\n\n  routeFormNewVehicles() {\n    this.router.navigate([`/vehicle/form`]);\n  }\n\n  back() {\n    window.history.back();\n  }\n\n  ngOnInit() {\n    this.vehicleService.getAllVehiclees()\n      .subscribe(res => {\n        console.log('>>>> get vehicles res=', res);\n        this.vehicles = res;\n        this.exibeProgress = false;\n        // this.router.navigate(['/users'])\n    },\n    error => {\n      console.log('error service get vehicles ==>', error);\n      this.exibeProgress = false;\n      this.isError = true;\n      this.error = `Não há vehicleos para ser exibido`;\n    });\n\n  }\n}\n","export class Driver {\n    id: string\n    name: string\n    socialSecurity: string\n    driveLicence: string\n    address: string\n    country: string\n    state: string\n    city: string\n    smsVerify: string\n    emailVerify: string\n    cellPhoneNumber: string\n    email: string\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Driver } from './driver.model';\nimport envConf from '../../shared/env-config'\n\nconst URL = `${envConf.api.url}/api/v1/Drivers`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllDrivers(){\n    console.log('getAllDrivers URL=>', URL);\n    return this.getDriversMock(); //this.http.get<Driver[]>(`${URL}`);\n  }\n\n  getDriverById(id){\n    console.log('getAllDrivers URL=>', URL);\n    return this.getOneDriversMock(); //this.http.get<Driver>(`${URL}/${id}`);\n  }\n\n  createDriver(driver) {\n    console.log('Driver=>', driver);\n    console.log('createDriver URL=>', URL);\n    return this.getOneDriversMock(); //this.http.post(`${URL}`, driver);\n  }\n\n  updateDriver(id, driver) {\n    console.log('Driver=>', driver);\n    console.log('updateDriver URL=>', `${URL}/${id}`);\n    return this.getOneDriversMock(); //this.http.post(`${URL}/${id}`, driver);\n  }\n\n  getOneDriversMock(){\n    let drivers =\n      { id: '1', name: 'Danilo de Jesus', email: 'danilo@gmail.com', cellPhoneNumber: '+5511961692905', status: 'ATIVO'}\n\n    return Observable.create(observer => {\n           observer.next(drivers)\n           observer.complete()\n    })\n  }\n\n  getDriversMock(){\n    let drivers = [\n      { id: '1', name: 'Danilo de Jesus', email: 'danilo@gmail.com', cellPhoneNumber: '+5511961692905'}\n    ]\n    return Observable.create(observer => {\n           observer.next(drivers)\n           observer.complete()\n    })\n  }\n}\n","export class GeoLocation {\n    lat: string\n    lon: string\n}\n\nexport class Vehicle {\n    id: string\n    identification: string\n    name: string\n    model: string\n    brand: string\n    category: string\n    status: string\n    geoLocation:GeoLocation\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Vehicle } from './vehicle.model';\nimport envConf from '../../shared/env-config'\n\nconst URL = `${envConf.api.url}/api/v1/vehicles`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllVehiclees(){\n    console.log('getAllVehiclees URL=>', URL);\n    return this.getVehiclesMock(); //this.http.get<Vehicle[]>(`${URL}`);\n  }\n\n  getVehiclesMock(){\n    let vehicles = [\n      { id: '1', identification: 'ASD-3658', name: 'Mercedes-Benz Sprinter Executiva Van', model: 'Sprinter', brand: 'Mercedes', category: 'VAN', status: 'ATIVO', geoLocation:{lat: '', lon: ''}}\n    ]\n    return Observable.create(observer => {\n           observer.next(vehicles)\n           observer.complete()\n    })\n  }\n\n  getOneVehiclesMock(){\n    let vehicles = \n      { id: '1', identification: 'ASD-3658', name: 'Mercedes-Benz Sprinter Executiva Van', model: 'Sprinter', brand: 'Mercedes', category: 'VAN', status: 'ATIVO', geoLocation:{lat: '', lon: ''}}\n    \n    return Observable.create(observer => {\n           observer.next(vehicles)\n           observer.complete()\n    })\n  }\n\n  getVehicleById(id){\n    console.log('getVehicleById URL=>', URL);\n    return this.getOneVehiclesMock(); // this.http.get<Vehicle>(`${URL}/${id}`);\n  }\n\n  createVehicle(vehicle) {\n    console.log('user=>', vehicle);\n    console.log('createVehicle URL=>', URL);\n    return this.getOneVehiclesMock(); // this.http.post(`${URL}`, vehicle);\n  }\n\n  updateVehicle(id, vehicle) {\n    console.log('user=>', vehicle);\n    console.log('updateVehicle URL=>', `${URL}/${id}`);\n    return this.getOneVehiclesMock(); // this.http.post(`${URL}/${id}`, vehicle);\n  }\n  \n}\n","\nimport { environment } from '../../environments/environment';\n\nexport default {\n    api: {\n        url: environment.apiUrl\n    }\n};\n","\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000\"\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs'; \n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}